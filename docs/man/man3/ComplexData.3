.TH "ComplexData" 3 "Version 0.1.1-beta" "Easy Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ComplexData
.SH SYNOPSIS
.br
.PP
.PP
继承自 \fBSerializable\fP \&.
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBComplexData\fP (int _id)"
.br
.ti -1c
.RI "void \fBserialize\fP (std::ofstream &file) const override"
.br
.ti -1c
.RI "void \fBdeserialize\fP (std::ifstream &file) override"
.br
.in -1c
.SS "Public 属性"

.in +1c
.ti -1c
.RI "int \fBid\fP"
.br
.ti -1c
.RI "std::vector< int > \fBnumbers\fP"
.br
.ti -1c
.RI "std::map< std::string, \fBPerson\fP > \fBpersonMap\fP"
.br
.ti -1c
.RI "std::shared_ptr< \fBTest\fP > \fBtestPtr\fP"
.br
.ti -1c
.RI "std::vector< \fBAddress\fP > \fBaddresses\fP"
.br
.in -1c
.SH "成员函数说明"
.PP 
.SS "void ComplexData::deserialize (std::ifstream & file)\fR [inline]\fP, \fR [override]\fP, \fR [virtual]\fP"

.PP
实现了 \fBSerializable\fP\&.
.SS "void ComplexData::serialize (std::ofstream & file) const\fR [inline]\fP, \fR [override]\fP, \fR [virtual]\fP"

.PP
实现了 \fBSerializable\fP\&.

.SH "作者"
.PP 
由 Doyxgen 通过分析 Easy Engine 的 源代码自动生成\&.
