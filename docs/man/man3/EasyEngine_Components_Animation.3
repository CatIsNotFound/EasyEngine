.TH "EasyEngine::Components::Animation" 3 "Version 0.1.1-beta" "Easy Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EasyEngine::Components::Animation
.SH SYNOPSIS
.br
.PP
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBAnimation\fP (const std::string &name)"
.br
.RI "创建动画 "
.ti -1c
.RI "\fBAnimation\fP (const std::string &name, const std::vector< \fBSprite\fP > &sprite_list, uint64_t duration_per_frame=50)"
.br
.RI "创建动画 "
.ti -1c
.RI "void \fBaddFrame\fP (const \fBSprite\fP &sprite, uint64_t duration=50)"
.br
.RI "将精灵图像加入到帧 "
.ti -1c
.RI "void \fBinsertFrame\fP (const \fBSprite\fP &sprite, uint64_t duration=50, const size_t \fBframe\fP=0)"
.br
.RI "将精灵图像插入到指定帧 "
.ti -1c
.RI "void \fBreplaceFrame\fP (const \fBSprite\fP &sprite, const size_t \fBframe\fP=0)"
.br
.RI "在指定帧下替换精灵图像 "
.ti -1c
.RI "void \fBremoveFrame\fP (const size_t \fBframe\fP=0)"
.br
.RI "移除指定帧对应的图像 "
.ti -1c
.RI "void \fBclearFrames\fP ()"
.br
.RI "清空所有帧下的图像 "
.ti -1c
.RI "size_t \fBframesCount\fP () const"
.br
.RI "获取该动画下的总帧数 "
.ti -1c
.RI "uint64_t \fBdurationInFrame\fP (const size_t \fBframe\fP=0)"
.br
.RI "获取当前帧的持续时间（单位：毫秒） "
.ti -1c
.RI "\fBSprite\fP * \fBspirit\fP (const size_t \fBframe\fP=0) const"
.br
.RI "获取指定帧数下的精灵 "
.ti -1c
.RI "void \fBplay\fP ()"
.br
.RI "播放动画 "
.ti -1c
.RI "void \fBstop\fP ()"
.br
.RI "停止动画 "
.ti -1c
.RI "void \fBplayLoop\fP ()"
.br
.RI "循环播放动画 "
.ti -1c
.RI "bool \fBisPlayedAnimation\fP () const"
.br
.RI "获取当前动画是否在播放 "
.ti -1c
.RI "size_t \fBframe\fP () const"
.br
.RI "获取当前正在播放第几帧 "
.in -1c
.SH "构造及析构函数说明"
.PP 
.SS "EasyEngine::Components::Animation::Animation (const std::string & name)\fR [explicit]\fP"

.PP
创建动画 
.PP
\fB参数\fP
.RS 4
\fIname\fP 动画别名 
.RE
.PP

.SS "EasyEngine::Components::Animation::Animation (const std::string & name, const std::vector< \fBSprite\fP > & sprite_list, uint64_t duration_per_frame = \fR50\fP)"

.PP
创建动画 
.PP
\fB参数\fP
.RS 4
\fIname\fP 动画别名 
.br
\fIsprite_list\fP 精灵列表 
.br
\fIduration_per_frame\fP 每帧的持续时间（单位：毫秒），默认 50 毫秒 
.RE
.PP

.SH "成员函数说明"
.PP 
.SS "void EasyEngine::Components::Animation::addFrame (const \fBSprite\fP & sprite, uint64_t duration = \fR50\fP)"

.PP
将精灵图像加入到帧 
.PP
\fB参数\fP
.RS 4
\fIsprite\fP 指定精灵 
.br
\fIduration\fP 帧持续时间（单位：毫秒），默认 50 毫秒 
.RE
.PP

.SS "uint64_t EasyEngine::Components::Animation::durationInFrame (const size_t frame = \fR0\fP)"

.PP
获取当前帧的持续时间（单位：毫秒） 
.PP
\fB参数\fP
.RS 4
\fIframe\fP 指定帧数 
.RE
.PP

.SS "size_t EasyEngine::Components::Animation::frame () const"

.PP
获取当前正在播放第几帧 
.PP
\fB参见\fP
.RS 4
\fBplay\fP 

.PP
\fBstop\fP 

.PP
\fBisPlayedAnimation\fP 
.RE
.PP

.SS "void EasyEngine::Components::Animation::insertFrame (const \fBSprite\fP & sprite, uint64_t duration = \fR50\fP, const size_t frame = \fR0\fP)"

.PP
将精灵图像插入到指定帧 
.PP
\fB参数\fP
.RS 4
\fIsprite\fP 指定精灵 
.br
\fIduration\fP 帧持续时间（单位：毫秒），默认 50 毫秒 
.br
\fIframe\fP 指定帧数，默认为第 0 帧 
.RE
.PP

.SS "bool EasyEngine::Components::Animation::isPlayedAnimation () const"

.PP
获取当前动画是否在播放 
.PP
\fB参见\fP
.RS 4
\fBplay\fP 

.PP
\fBstop\fP 

.PP
\fBframe\fP 
.RE
.PP

.SS "void EasyEngine::Components::Animation::play ()"

.PP
播放动画 
.PP
\fB参见\fP
.RS 4
\fBplayLoop\fP 

.PP
\fBstop\fP 

.PP
\fBframe\fP 

.PP
\fBisPlayedAnimation\fP 
.RE
.PP

.SS "void EasyEngine::Components::Animation::playLoop ()"

.PP
循环播放动画 
.PP
\fB参见\fP
.RS 4
\fBstop\fP 

.PP
\fBframe\fP 

.PP
\fBisPlayedAnimation\fP 
.RE
.PP

.SS "void EasyEngine::Components::Animation::removeFrame (const size_t frame = \fR0\fP)"

.PP
移除指定帧对应的图像 
.PP
\fB参数\fP
.RS 4
\fIframe\fP 指定帧数，默认为第 0 帧 
.RE
.PP

.SS "void EasyEngine::Components::Animation::replaceFrame (const \fBSprite\fP & sprite, const size_t frame = \fR0\fP)"

.PP
在指定帧下替换精灵图像 
.PP
\fB参数\fP
.RS 4
\fIsprite\fP 新的精灵图像 
.br
\fIframe\fP 指定帧数 
.RE
.PP

.SS "\fBEasyEngine::Components::Sprite\fP * EasyEngine::Components::Animation::spirit (const size_t frame = \fR0\fP) const"

.PP
获取指定帧数下的精灵 
.PP
\fB参见\fP
.RS 4
\fBaddFrame\fP 

.PP
\fBinsertFrame\fP 

.PP
\fBremoveFrame\fP 

.PP
\fBreplaceFrame\fP 
.RE
.PP

.SS "void EasyEngine::Components::Animation::stop ()"

.PP
停止动画 
.PP
\fB参见\fP
.RS 4
\fBplay\fP 

.PP
\fBframe\fP 

.PP
\fBisPlayedAnimation\fP 
.RE
.PP


.SH "作者"
.PP 
由 Doyxgen 通过分析 Easy Engine 的 源代码自动生成\&.
